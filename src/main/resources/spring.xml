<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- override default /WEB-INF/messages with optional /data/biocache/config/messages -->
        <property name="basenames" value="file:///var/opt/atlas/i18n/biocache-service/messages,file:///opt/atlas/i18n/biocache-service/messages,file:///data/biocache/config/messages,/WEB-INF/messages"/>
        <property name="cacheSeconds" value="10"/><!-- loads changes without restarting container -->
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <!-- This will override the default DefaultAnnotationHandlerMapping that is created,
         and not map file extensions automagically -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />

    <!--
      - This bean resolves specific types of exceptions to corresponding logical
      - view names for error views. The default behaviour of DispatcherServlet
      - is to propagate all exceptions to the servlet container: this will happen
      - here with all other types of exceptions.
     -->
    <bean class="au.org.ala.biocache.web.CustomExceptionResolver">
        <property name="defaultStatusCode" value="500"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.servlet.PageNotFound">error/pageNotFound</prop>
                <prop key="org.springframework.dao.DataAccessException">error/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">error/dataAccessFailure</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="error/pageNotFound">404</prop>
            </props>
        </property>
        <property name="defaultErrorView" value="error/general" />
    </bean>

    <bean id="htmlMediaType" class="org.springframework.http.MediaType">
        <constructor-arg index="0" value="text" />
        <constructor-arg index="1" value="html" />
    </bean>

    <bean id="restfulClient" class="org.ala.client.util.RestfulClient"/>

    <!-- beans for RestTemplate  -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="objectMapper" ref="jacksonObjectMapper"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="jacksonDeserializationConfig" factory-bean="jacksonObjectMapper" factory-method="getDeserializationConfig"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="jacksonDeserializationConfig"/>
        <property name="targetMethod" value="withAttribute"/>
        <property name="arguments">
            <list>
                <value type="com.fasterxml.jackson.databind.DeserializationFeature">FAIL_ON_UNKNOWN_PROPERTIES</value>
                <value>false</value>
            </list>
        </property>
    </bean>
    
    <!-- MBean configuration for ehcache -->
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
    </bean>

    <bean id="managementService" class="net.sf.ehcache.management.ManagementService"
          init-method="init"
          destroy-method="dispose">
        <constructor-arg ref="ehCacheManager"/>
        <constructor-arg ref="mbeanServer"/>
        <constructor-arg index="2" value="true"/>
        <constructor-arg index="3" value="true"/>
        <constructor-arg index="4" value="true"/>
        <constructor-arg index="5" value="true"/>
    </bean>

    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation"  value="/WEB-INF/ehcache.xml"/>
        <property name="shared" value="true" />
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>

</beans>